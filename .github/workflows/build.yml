name: Build PicoFlora

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # Allow manual triggering

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: recursive  # Initialize git submodules
        
    - name: Cache Pico SDK
      uses: actions/cache@v4
      with:
        path: ~/pico-sdk
        key: ${{ runner.os }}-pico-sdk-${{ hashFiles('**/pico_sdk_import.cmake') }}
        restore-keys: |
          ${{ runner.os }}-pico-sdk-
          
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y cmake gcc-arm-none-eabi libnewlib-arm-none-eabi libstdc++-arm-none-eabi-newlib build-essential
        
    - name: Setup Pico SDK
      run: |
        if [ ! -d "~/pico-sdk" ]; then
          cd ~
          git clone https://github.com/raspberrypi/pico-sdk.git --branch 2.1.1 --depth 1
          cd pico-sdk
          git submodule update --init
        fi
        echo "PICO_SDK_PATH=$HOME/pico-sdk" >> $GITHUB_ENV
        
    - name: Create build directory
      run: mkdir -p build
      
    - name: Configure CMake
      run: |
        cd build
        cmake .. -DCMAKE_BUILD_TYPE=Release -DPICO_BOARD=pico2
        
    - name: Build project
      run: |
        cd build
        make -j$(nproc)
        
    - name: Verify build artifacts
      run: |
        echo "Checking for build artifacts..."
        ls -la build/
        ls -la build/PicoFlora.*
        
    - name: Upload UF2 artifact
      uses: actions/upload-artifact@v4
      with:
        name: PicoFlora-uf2
        path: build/PicoFlora.uf2
        retention-days: 30
        
    - name: Upload ELF artifact
      uses: actions/upload-artifact@v4
      with:
        name: PicoFlora-elf
        path: build/PicoFlora.elf
        retention-days: 30
        
    - name: Upload additional build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: PicoFlora-build-artifacts
        path: |
          build/PicoFlora.bin
          build/PicoFlora.hex
          build/PicoFlora.dis
          build/PicoFlora.elf.map
        retention-days: 30
        if-no-files-found: ignore
        
    - name: Create release assets (on tag)
      if: startsWith(github.ref, 'refs/tags/')
      run: |
        mkdir -p release-assets
        cp build/PicoFlora.uf2 release-assets/
        cp build/PicoFlora.elf release-assets/
        cp build/PicoFlora.bin release-assets/
        cp build/PicoFlora.hex release-assets/
        echo "Build completed for tag: ${{ github.ref_name }}" > release-assets/BUILD_INFO.txt
        echo "Commit: ${{ github.sha }}" >> release-assets/BUILD_INFO.txt
        echo "Build date: $(date)" >> release-assets/BUILD_INFO.txt
        
    - name: Upload release assets
      if: startsWith(github.ref, 'refs/tags/')
      uses: actions/upload-artifact@v4
      with:
        name: PicoFlora-release-${{ github.ref_name }}
        path: release-assets/
        retention-days: 90
